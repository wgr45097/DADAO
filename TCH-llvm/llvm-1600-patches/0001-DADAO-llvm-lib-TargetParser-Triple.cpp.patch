From 14be017a3745a0714afd205de59e71a02e5a1666 Mon Sep 17 00:00:00 2001
From: Guorui Wen <grwen@stu.pku.edu.cn>
Date: Sat, 2 Mar 2024 13:15:51 +0800
Subject: [PATCH] DADAO: llvm/lib/TargetParser/Triple.cpp

Signed-off-by: Guorui Wen <grwen@stu.pku.edu.cn>
---
 llvm/lib/TargetParser/Triple.cpp | 10 ++++++++++
 1 file changed, 10 insertions(+)

diff --git a/llvm/lib/TargetParser/Triple.cpp b/llvm/lib/TargetParser/Triple.cpp
index a68035989a93..06c4740ddd71 100644
--- a/llvm/lib/TargetParser/Triple.cpp
+++ b/llvm/lib/TargetParser/Triple.cpp
@@ -43,6 +43,7 @@ StringRef Triple::getArchTypeName(ArchType Kind) {
   case hsail:          return "hsail";
   case kalimba:        return "kalimba";
   case lanai:          return "lanai";
+  case dadao:          return "dadao";
   case le32:           return "le32";
   case le64:           return "le64";
   case loongarch32:    return "loongarch32";
@@ -159,6 +160,7 @@ StringRef Triple::getArchTypePrefix(ArchType Kind) {
 
   case kalimba:     return "kalimba";
   case lanai:       return "lanai";
+  case dadao:       return "dadao";
   case shave:       return "shave";
   case wasm32:
   case wasm64:      return "wasm";
@@ -367,6 +369,7 @@ Triple::ArchType Triple::getArchTypeForLLVMName(StringRef Name) {
     .Case("spirv64", spirv64)
     .Case("kalimba", kalimba)
     .Case("lanai", lanai)
+    .Case("dadao", dadao)
     .Case("shave", shave)
     .Case("wasm32", wasm32)
     .Case("wasm64", wasm64)
@@ -509,6 +512,7 @@ static Triple::ArchType parseArch(StringRef ArchName) {
            "spirv64v1.3", "spirv64v1.4", "spirv64v1.5", Triple::spirv64)
     .StartsWith("kalimba", Triple::kalimba)
     .Case("lanai", Triple::lanai)
+    .Case("dadao", Triple::dadao)
     .Case("renderscript32", Triple::renderscript32)
     .Case("renderscript64", Triple::renderscript64)
     .Case("shave", Triple::shave)
@@ -824,6 +828,7 @@ static Triple::ObjectFormatType getDefaultFormat(const Triple &T) {
   case Triple::hsail:
   case Triple::kalimba:
   case Triple::lanai:
+  case Triple::dadao:
   case Triple::le32:
   case Triple::le64:
   case Triple::loongarch32:
@@ -1444,6 +1449,7 @@ static unsigned getArchPointerBitWidth(llvm::Triple::ArchType Arch) {
   case llvm::Triple::amdil64:
   case llvm::Triple::bpfeb:
   case llvm::Triple::bpfel:
+  case llvm::Triple::dadao:
   case llvm::Triple::hsail64:
   case llvm::Triple::le64:
   case llvm::Triple::loongarch64:
@@ -1486,6 +1492,7 @@ Triple Triple::get32BitArchVariant() const {
   case Triple::avr:
   case Triple::bpfeb:
   case Triple::bpfel:
+  case Triple::dadao:
   case Triple::msp430:
   case Triple::systemz:
   case Triple::ve:
@@ -1587,6 +1594,7 @@ Triple Triple::get64BitArchVariant() const {
   case Triple::amdil64:
   case Triple::bpfeb:
   case Triple::bpfel:
+  case Triple::dadao:
   case Triple::hsail64:
   case Triple::le64:
   case Triple::loongarch64:
@@ -1649,6 +1657,7 @@ Triple Triple::getBigEndianArchVariant() const {
   case Triple::amdil64:
   case Triple::amdil:
   case Triple::avr:
+  case Triple::dadao:
   case Triple::dxil:
   case Triple::hexagon:
   case Triple::hsail64:
@@ -1753,6 +1762,7 @@ bool Triple::isLittleEndian() const {
   case Triple::avr:
   case Triple::bpfel:
   case Triple::csky:
+  case Triple::dadao:
   case Triple::dxil:
   case Triple::hexagon:
   case Triple::hsail64:
-- 
2.34.1

